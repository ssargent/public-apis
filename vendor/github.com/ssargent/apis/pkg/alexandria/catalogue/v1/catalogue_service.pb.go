// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: alexandria/catalogue/v1/catalogue_service.proto

package cataloguev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*RoomInput `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *CreateRoomRequest) Reset() {
	*x = CreateRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRequest) ProtoMessage() {}

func (x *CreateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRoomRequest) GetRooms() []*RoomInput {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type Rooms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*Room `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *Rooms) Reset() {
	*x = Rooms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rooms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rooms) ProtoMessage() {}

func (x *Rooms) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rooms.ProtoReflect.Descriptor instead.
func (*Rooms) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{2}
}

func (x *Rooms) GetRooms() []*Room {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type CreateRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*CreateRoomResponse_Rooms
	//	*CreateRoomResponse_Error
	Result isCreateRoomResponse_Result `protobuf_oneof:"result"`
}

func (x *CreateRoomResponse) Reset() {
	*x = CreateRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomResponse) ProtoMessage() {}

func (x *CreateRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateRoomResponse) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{3}
}

func (m *CreateRoomResponse) GetResult() isCreateRoomResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CreateRoomResponse) GetRooms() *Rooms {
	if x, ok := x.GetResult().(*CreateRoomResponse_Rooms); ok {
		return x.Rooms
	}
	return nil
}

func (x *CreateRoomResponse) GetError() *ErrorResponse {
	if x, ok := x.GetResult().(*CreateRoomResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isCreateRoomResponse_Result interface {
	isCreateRoomResponse_Result()
}

type CreateRoomResponse_Rooms struct {
	Rooms *Rooms `protobuf:"bytes,1,opt,name=rooms,proto3,oneof"`
}

type CreateRoomResponse_Error struct {
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*CreateRoomResponse_Rooms) isCreateRoomResponse_Result() {}

func (*CreateRoomResponse_Error) isCreateRoomResponse_Result() {}

type CreateItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ItemInput `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CreateItemRequest) Reset() {
	*x = CreateItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemRequest) ProtoMessage() {}

func (x *CreateItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemRequest.ProtoReflect.Descriptor instead.
func (*CreateItemRequest) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateItemRequest) GetItems() []*ItemInput {
	if x != nil {
		return x.Items
	}
	return nil
}

type Items struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Items) Reset() {
	*x = Items{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Items) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Items) ProtoMessage() {}

func (x *Items) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Items.ProtoReflect.Descriptor instead.
func (*Items) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{5}
}

func (x *Items) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*CreateItemResponse_Items
	//	*CreateItemResponse_Error
	Result isCreateItemResponse_Result `protobuf_oneof:"result"`
}

func (x *CreateItemResponse) Reset() {
	*x = CreateItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemResponse) ProtoMessage() {}

func (x *CreateItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemResponse.ProtoReflect.Descriptor instead.
func (*CreateItemResponse) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{6}
}

func (m *CreateItemResponse) GetResult() isCreateItemResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CreateItemResponse) GetItems() *Items {
	if x, ok := x.GetResult().(*CreateItemResponse_Items); ok {
		return x.Items
	}
	return nil
}

func (x *CreateItemResponse) GetError() *ErrorResponse {
	if x, ok := x.GetResult().(*CreateItemResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isCreateItemResponse_Result interface {
	isCreateItemResponse_Result()
}

type CreateItemResponse_Items struct {
	Items *Items `protobuf:"bytes,1,opt,name=items,proto3,oneof"`
}

type CreateItemResponse_Error struct {
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*CreateItemResponse_Items) isCreateItemResponse_Result() {}

func (*CreateItemResponse_Error) isCreateItemResponse_Result() {}

type CreateShelfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shelves []*ShelfInput `protobuf:"bytes,1,rep,name=shelves,proto3" json:"shelves,omitempty"`
}

func (x *CreateShelfRequest) Reset() {
	*x = CreateShelfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShelfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShelfRequest) ProtoMessage() {}

func (x *CreateShelfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShelfRequest.ProtoReflect.Descriptor instead.
func (*CreateShelfRequest) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateShelfRequest) GetShelves() []*ShelfInput {
	if x != nil {
		return x.Shelves
	}
	return nil
}

type Shelves struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shelves []*Shelf `protobuf:"bytes,1,rep,name=shelves,proto3" json:"shelves,omitempty"`
}

func (x *Shelves) Reset() {
	*x = Shelves{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shelves) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shelves) ProtoMessage() {}

func (x *Shelves) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shelves.ProtoReflect.Descriptor instead.
func (*Shelves) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{8}
}

func (x *Shelves) GetShelves() []*Shelf {
	if x != nil {
		return x.Shelves
	}
	return nil
}

type CreateShelfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*CreateShelfResponse_Shelves
	//	*CreateShelfResponse_Error
	Result isCreateShelfResponse_Result `protobuf_oneof:"result"`
}

func (x *CreateShelfResponse) Reset() {
	*x = CreateShelfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShelfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShelfResponse) ProtoMessage() {}

func (x *CreateShelfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShelfResponse.ProtoReflect.Descriptor instead.
func (*CreateShelfResponse) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{9}
}

func (m *CreateShelfResponse) GetResult() isCreateShelfResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CreateShelfResponse) GetShelves() *Shelves {
	if x, ok := x.GetResult().(*CreateShelfResponse_Shelves); ok {
		return x.Shelves
	}
	return nil
}

func (x *CreateShelfResponse) GetError() *ErrorResponse {
	if x, ok := x.GetResult().(*CreateShelfResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isCreateShelfResponse_Result interface {
	isCreateShelfResponse_Result()
}

type CreateShelfResponse_Shelves struct {
	Shelves *Shelves `protobuf:"bytes,1,opt,name=shelves,proto3,oneof"`
}

type CreateShelfResponse_Error struct {
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*CreateShelfResponse_Shelves) isCreateShelfResponse_Result() {}

func (*CreateShelfResponse_Error) isCreateShelfResponse_Result() {}

type MoveItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId  string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ShelfId string `protobuf:"bytes,2,opt,name=shelf_id,json=shelfId,proto3" json:"shelf_id,omitempty"`
}

func (x *MoveItemRequest) Reset() {
	*x = MoveItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveItemRequest) ProtoMessage() {}

func (x *MoveItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveItemRequest.ProtoReflect.Descriptor instead.
func (*MoveItemRequest) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{10}
}

func (x *MoveItemRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *MoveItemRequest) GetShelfId() string {
	if x != nil {
		return x.ShelfId
	}
	return ""
}

type MoveItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*MoveItemResponse_Item
	//	*MoveItemResponse_Error
	Result isMoveItemResponse_Result `protobuf_oneof:"result"`
}

func (x *MoveItemResponse) Reset() {
	*x = MoveItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveItemResponse) ProtoMessage() {}

func (x *MoveItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveItemResponse.ProtoReflect.Descriptor instead.
func (*MoveItemResponse) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{11}
}

func (m *MoveItemResponse) GetResult() isMoveItemResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *MoveItemResponse) GetItem() *Item {
	if x, ok := x.GetResult().(*MoveItemResponse_Item); ok {
		return x.Item
	}
	return nil
}

func (x *MoveItemResponse) GetError() *ErrorResponse {
	if x, ok := x.GetResult().(*MoveItemResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isMoveItemResponse_Result interface {
	isMoveItemResponse_Result()
}

type MoveItemResponse_Item struct {
	Item *Item `protobuf:"bytes,1,opt,name=item,proto3,oneof"`
}

type MoveItemResponse_Error struct {
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*MoveItemResponse_Item) isMoveItemResponse_Result() {}

func (*MoveItemResponse_Error) isMoveItemResponse_Result() {}

type Search struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query      string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Author     string   `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Categories []string `protobuf:"bytes,3,rep,name=categories,proto3" json:"categories,omitempty"`
}

func (x *Search) Reset() {
	*x = Search{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Search) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Search) ProtoMessage() {}

func (x *Search) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Search.ProtoReflect.Descriptor instead.
func (*Search) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{12}
}

func (x *Search) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *Search) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Search) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search *Search `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{13}
}

func (x *SearchRequest) GetSearch() *Search {
	if x != nil {
		return x.Search
	}
	return nil
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SearchResponse_Items
	//	*SearchResponse_Error
	Result isSearchResponse_Result `protobuf_oneof:"result"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP(), []int{14}
}

func (m *SearchResponse) GetResult() isSearchResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SearchResponse) GetItems() *Items {
	if x, ok := x.GetResult().(*SearchResponse_Items); ok {
		return x.Items
	}
	return nil
}

func (x *SearchResponse) GetError() *ErrorResponse {
	if x, ok := x.GetResult().(*SearchResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isSearchResponse_Result interface {
	isSearchResponse_Result()
}

type SearchResponse_Items struct {
	Items *Items `protobuf:"bytes,1,opt,name=items,proto3,oneof"`
}

type SearchResponse_Error struct {
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SearchResponse_Items) isSearchResponse_Result() {}

func (*SearchResponse_Error) isSearchResponse_Result() {}

var File_alexandria_catalogue_v1_catalogue_service_proto protoreflect.FileDescriptor

var file_alexandria_catalogue_v1_catalogue_service_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2f, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x75, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x17, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x27, 0x61, 0x6c, 0x65, 0x78,
	0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x4d, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64,
	0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d,
	0x73, 0x22, 0x3c, 0x0a, 0x05, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x6c, 0x65, 0x78,
	0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22,
	0x96, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72,
	0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x3e,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4d, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61,
	0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3c, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6c,
	0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x53,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72,
	0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x68, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x07, 0x73, 0x68, 0x65, 0x6c,
	0x76, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x07, 0x53, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x73, 0x12, 0x38,
	0x0a, 0x07, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x66, 0x52,
	0x07, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x68, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x07, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x65, 0x6c,
	0x76, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x73, 0x12, 0x3e,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x45, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x65, 0x6c, 0x66, 0x49, 0x64, 0x22,
	0x91, 0x01, 0x0a, 0x10, 0x4d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x48, 0x00, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61,
	0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x56, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x0d, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e,
	0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x86, 0x04, 0x0a, 0x10, 0x43,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x65, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x2a, 0x2e,
	0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x6c, 0x65, 0x78,
	0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x2a, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69,
	0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x65, 0x6c, 0x66, 0x12, 0x2b, 0x2e, 0x61,
	0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x65,
	0x6c, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x6c, 0x65, 0x78,
	0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x65, 0x6c, 0x66, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x08, 0x4d, 0x6f, 0x76, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x28, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x26, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x6c, 0x65,
	0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0xf4, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x78,
	0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65,
	0x2e, 0x76, 0x31, 0x42, 0x15, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x73, 0x61, 0x72, 0x67, 0x65, 0x6e,
	0x74, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x6c, 0x65, 0x78, 0x61,
	0x6e, 0x64, 0x72, 0x69, 0x61, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2f,
	0x76, 0x31, 0x3b, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x41, 0x43, 0x58, 0xaa, 0x02, 0x17, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69,
	0x61, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x17, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x5c, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x75, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x23, 0x41, 0x6c, 0x65, 0x78, 0x61,
	0x6e, 0x64, 0x72, 0x69, 0x61, 0x5c, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x19, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x61, 0x3a, 0x3a, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_alexandria_catalogue_v1_catalogue_service_proto_rawDescOnce sync.Once
	file_alexandria_catalogue_v1_catalogue_service_proto_rawDescData = file_alexandria_catalogue_v1_catalogue_service_proto_rawDesc
)

func file_alexandria_catalogue_v1_catalogue_service_proto_rawDescGZIP() []byte {
	file_alexandria_catalogue_v1_catalogue_service_proto_rawDescOnce.Do(func() {
		file_alexandria_catalogue_v1_catalogue_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_alexandria_catalogue_v1_catalogue_service_proto_rawDescData)
	})
	return file_alexandria_catalogue_v1_catalogue_service_proto_rawDescData
}

var file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_alexandria_catalogue_v1_catalogue_service_proto_goTypes = []interface{}{
	(*ErrorResponse)(nil),       // 0: alexandria.catalogue.v1.ErrorResponse
	(*CreateRoomRequest)(nil),   // 1: alexandria.catalogue.v1.CreateRoomRequest
	(*Rooms)(nil),               // 2: alexandria.catalogue.v1.Rooms
	(*CreateRoomResponse)(nil),  // 3: alexandria.catalogue.v1.CreateRoomResponse
	(*CreateItemRequest)(nil),   // 4: alexandria.catalogue.v1.CreateItemRequest
	(*Items)(nil),               // 5: alexandria.catalogue.v1.Items
	(*CreateItemResponse)(nil),  // 6: alexandria.catalogue.v1.CreateItemResponse
	(*CreateShelfRequest)(nil),  // 7: alexandria.catalogue.v1.CreateShelfRequest
	(*Shelves)(nil),             // 8: alexandria.catalogue.v1.Shelves
	(*CreateShelfResponse)(nil), // 9: alexandria.catalogue.v1.CreateShelfResponse
	(*MoveItemRequest)(nil),     // 10: alexandria.catalogue.v1.MoveItemRequest
	(*MoveItemResponse)(nil),    // 11: alexandria.catalogue.v1.MoveItemResponse
	(*Search)(nil),              // 12: alexandria.catalogue.v1.Search
	(*SearchRequest)(nil),       // 13: alexandria.catalogue.v1.SearchRequest
	(*SearchResponse)(nil),      // 14: alexandria.catalogue.v1.SearchResponse
	(*RoomInput)(nil),           // 15: alexandria.catalogue.v1.RoomInput
	(*Room)(nil),                // 16: alexandria.catalogue.v1.Room
	(*ItemInput)(nil),           // 17: alexandria.catalogue.v1.ItemInput
	(*Item)(nil),                // 18: alexandria.catalogue.v1.Item
	(*ShelfInput)(nil),          // 19: alexandria.catalogue.v1.ShelfInput
	(*Shelf)(nil),               // 20: alexandria.catalogue.v1.Shelf
}
var file_alexandria_catalogue_v1_catalogue_service_proto_depIdxs = []int32{
	15, // 0: alexandria.catalogue.v1.CreateRoomRequest.rooms:type_name -> alexandria.catalogue.v1.RoomInput
	16, // 1: alexandria.catalogue.v1.Rooms.rooms:type_name -> alexandria.catalogue.v1.Room
	2,  // 2: alexandria.catalogue.v1.CreateRoomResponse.rooms:type_name -> alexandria.catalogue.v1.Rooms
	0,  // 3: alexandria.catalogue.v1.CreateRoomResponse.error:type_name -> alexandria.catalogue.v1.ErrorResponse
	17, // 4: alexandria.catalogue.v1.CreateItemRequest.items:type_name -> alexandria.catalogue.v1.ItemInput
	18, // 5: alexandria.catalogue.v1.Items.items:type_name -> alexandria.catalogue.v1.Item
	5,  // 6: alexandria.catalogue.v1.CreateItemResponse.items:type_name -> alexandria.catalogue.v1.Items
	0,  // 7: alexandria.catalogue.v1.CreateItemResponse.error:type_name -> alexandria.catalogue.v1.ErrorResponse
	19, // 8: alexandria.catalogue.v1.CreateShelfRequest.shelves:type_name -> alexandria.catalogue.v1.ShelfInput
	20, // 9: alexandria.catalogue.v1.Shelves.shelves:type_name -> alexandria.catalogue.v1.Shelf
	8,  // 10: alexandria.catalogue.v1.CreateShelfResponse.shelves:type_name -> alexandria.catalogue.v1.Shelves
	0,  // 11: alexandria.catalogue.v1.CreateShelfResponse.error:type_name -> alexandria.catalogue.v1.ErrorResponse
	18, // 12: alexandria.catalogue.v1.MoveItemResponse.item:type_name -> alexandria.catalogue.v1.Item
	0,  // 13: alexandria.catalogue.v1.MoveItemResponse.error:type_name -> alexandria.catalogue.v1.ErrorResponse
	12, // 14: alexandria.catalogue.v1.SearchRequest.search:type_name -> alexandria.catalogue.v1.Search
	5,  // 15: alexandria.catalogue.v1.SearchResponse.items:type_name -> alexandria.catalogue.v1.Items
	0,  // 16: alexandria.catalogue.v1.SearchResponse.error:type_name -> alexandria.catalogue.v1.ErrorResponse
	1,  // 17: alexandria.catalogue.v1.CatalogueService.CreateRoom:input_type -> alexandria.catalogue.v1.CreateRoomRequest
	4,  // 18: alexandria.catalogue.v1.CatalogueService.CreateItem:input_type -> alexandria.catalogue.v1.CreateItemRequest
	7,  // 19: alexandria.catalogue.v1.CatalogueService.CreateShelf:input_type -> alexandria.catalogue.v1.CreateShelfRequest
	10, // 20: alexandria.catalogue.v1.CatalogueService.MoveItem:input_type -> alexandria.catalogue.v1.MoveItemRequest
	13, // 21: alexandria.catalogue.v1.CatalogueService.Search:input_type -> alexandria.catalogue.v1.SearchRequest
	3,  // 22: alexandria.catalogue.v1.CatalogueService.CreateRoom:output_type -> alexandria.catalogue.v1.CreateRoomResponse
	6,  // 23: alexandria.catalogue.v1.CatalogueService.CreateItem:output_type -> alexandria.catalogue.v1.CreateItemResponse
	9,  // 24: alexandria.catalogue.v1.CatalogueService.CreateShelf:output_type -> alexandria.catalogue.v1.CreateShelfResponse
	11, // 25: alexandria.catalogue.v1.CatalogueService.MoveItem:output_type -> alexandria.catalogue.v1.MoveItemResponse
	14, // 26: alexandria.catalogue.v1.CatalogueService.Search:output_type -> alexandria.catalogue.v1.SearchResponse
	22, // [22:27] is the sub-list for method output_type
	17, // [17:22] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_alexandria_catalogue_v1_catalogue_service_proto_init() }
func file_alexandria_catalogue_v1_catalogue_service_proto_init() {
	if File_alexandria_catalogue_v1_catalogue_service_proto != nil {
		return
	}
	file_alexandria_catalogue_v1_catalogue_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rooms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Items); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShelfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shelves); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShelfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Search); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*CreateRoomResponse_Rooms)(nil),
		(*CreateRoomResponse_Error)(nil),
	}
	file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*CreateItemResponse_Items)(nil),
		(*CreateItemResponse_Error)(nil),
	}
	file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*CreateShelfResponse_Shelves)(nil),
		(*CreateShelfResponse_Error)(nil),
	}
	file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*MoveItemResponse_Item)(nil),
		(*MoveItemResponse_Error)(nil),
	}
	file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*SearchResponse_Items)(nil),
		(*SearchResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_alexandria_catalogue_v1_catalogue_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_alexandria_catalogue_v1_catalogue_service_proto_goTypes,
		DependencyIndexes: file_alexandria_catalogue_v1_catalogue_service_proto_depIdxs,
		MessageInfos:      file_alexandria_catalogue_v1_catalogue_service_proto_msgTypes,
	}.Build()
	File_alexandria_catalogue_v1_catalogue_service_proto = out.File
	file_alexandria_catalogue_v1_catalogue_service_proto_rawDesc = nil
	file_alexandria_catalogue_v1_catalogue_service_proto_goTypes = nil
	file_alexandria_catalogue_v1_catalogue_service_proto_depIdxs = nil
}
