// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: bbq/collector/v1/bbq.proto

package collectorv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sensor struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Manufacturer    string                 `protobuf:"bytes,2,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	SensorCount     int32                  `protobuf:"varint,3,opt,name=sensor_count,json=sensorCount,proto3" json:"sensor_count,omitempty"`
	TemperatureUnit string                 `protobuf:"bytes,4,opt,name=temperature_unit,json=temperatureUnit,proto3" json:"temperature_unit,omitempty"`
	SensorId        string                 `protobuf:"bytes,5,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Sensor) Reset() {
	*x = Sensor{}
	mi := &file_bbq_collector_v1_bbq_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sensor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sensor) ProtoMessage() {}

func (x *Sensor) ProtoReflect() protoreflect.Message {
	mi := &file_bbq_collector_v1_bbq_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sensor.ProtoReflect.Descriptor instead.
func (*Sensor) Descriptor() ([]byte, []int) {
	return file_bbq_collector_v1_bbq_proto_rawDescGZIP(), []int{0}
}

func (x *Sensor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Sensor) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *Sensor) GetSensorCount() int32 {
	if x != nil {
		return x.SensorCount
	}
	return 0
}

func (x *Sensor) GetTemperatureUnit() string {
	if x != nil {
		return x.TemperatureUnit
	}
	return ""
}

func (x *Sensor) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

type SensorReading struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SensorNumber  int32                  `protobuf:"varint,1,opt,name=sensor_number,json=sensorNumber,proto3" json:"sensor_number,omitempty"`
	Temperature   float32                `protobuf:"fixed32,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorReading) Reset() {
	*x = SensorReading{}
	mi := &file_bbq_collector_v1_bbq_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorReading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorReading) ProtoMessage() {}

func (x *SensorReading) ProtoReflect() protoreflect.Message {
	mi := &file_bbq_collector_v1_bbq_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorReading.ProtoReflect.Descriptor instead.
func (*SensorReading) Descriptor() ([]byte, []int) {
	return file_bbq_collector_v1_bbq_proto_rawDescGZIP(), []int{1}
}

func (x *SensorReading) GetSensorNumber() int32 {
	if x != nil {
		return x.SensorNumber
	}
	return 0
}

func (x *SensorReading) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

type Reading struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sensor        *Sensor                `protobuf:"bytes,1,opt,name=sensor,proto3" json:"sensor,omitempty"`
	Readings      []*SensorReading       `protobuf:"bytes,2,rep,name=readings,proto3" json:"readings,omitempty"`
	RecordedAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=recorded_at,json=recordedAt,proto3" json:"recorded_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reading) Reset() {
	*x = Reading{}
	mi := &file_bbq_collector_v1_bbq_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reading) ProtoMessage() {}

func (x *Reading) ProtoReflect() protoreflect.Message {
	mi := &file_bbq_collector_v1_bbq_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reading.ProtoReflect.Descriptor instead.
func (*Reading) Descriptor() ([]byte, []int) {
	return file_bbq_collector_v1_bbq_proto_rawDescGZIP(), []int{2}
}

func (x *Reading) GetSensor() *Sensor {
	if x != nil {
		return x.Sensor
	}
	return nil
}

func (x *Reading) GetReadings() []*SensorReading {
	if x != nil {
		return x.Readings
	}
	return nil
}

func (x *Reading) GetRecordedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RecordedAt
	}
	return nil
}

type Session struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_bbq_collector_v1_bbq_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_bbq_collector_v1_bbq_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_bbq_collector_v1_bbq_proto_rawDescGZIP(), []int{3}
}

func (x *Session) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Session) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_bbq_collector_v1_bbq_proto protoreflect.FileDescriptor

const file_bbq_collector_v1_bbq_proto_rawDesc = "" +
	"\n" +
	"\x1abbq/collector/v1/bbq.proto\x12\x10bbq.collector.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xab\x01\n" +
	"\x06Sensor\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\"\n" +
	"\fmanufacturer\x18\x02 \x01(\tR\fmanufacturer\x12!\n" +
	"\fsensor_count\x18\x03 \x01(\x05R\vsensorCount\x12)\n" +
	"\x10temperature_unit\x18\x04 \x01(\tR\x0ftemperatureUnit\x12\x1b\n" +
	"\tsensor_id\x18\x05 \x01(\tR\bsensorId\"V\n" +
	"\rSensorReading\x12#\n" +
	"\rsensor_number\x18\x01 \x01(\x05R\fsensorNumber\x12 \n" +
	"\vtemperature\x18\x02 \x01(\x02R\vtemperature\"\xb5\x01\n" +
	"\aReading\x120\n" +
	"\x06sensor\x18\x01 \x01(\v2\x18.bbq.collector.v1.SensorR\x06sensor\x12;\n" +
	"\breadings\x18\x02 \x03(\v2\x1f.bbq.collector.v1.SensorReadingR\breadings\x12;\n" +
	"\vrecorded_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"recordedAt\"-\n" +
	"\aSession\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04nameB\xc4\x01\n" +
	"\x14com.bbq.collector.v1B\bBbqProtoP\x01Z@github.com/ssargent/public-apis/pkg/bbq/collector/v1;collectorv1\xa2\x02\x03BCX\xaa\x02\x10Bbq.Collector.V1\xca\x02\x10Bbq\\Collector\\V1\xe2\x02\x1cBbq\\Collector\\V1\\GPBMetadata\xea\x02\x12Bbq::Collector::V1b\x06proto3"

var (
	file_bbq_collector_v1_bbq_proto_rawDescOnce sync.Once
	file_bbq_collector_v1_bbq_proto_rawDescData []byte
)

func file_bbq_collector_v1_bbq_proto_rawDescGZIP() []byte {
	file_bbq_collector_v1_bbq_proto_rawDescOnce.Do(func() {
		file_bbq_collector_v1_bbq_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bbq_collector_v1_bbq_proto_rawDesc), len(file_bbq_collector_v1_bbq_proto_rawDesc)))
	})
	return file_bbq_collector_v1_bbq_proto_rawDescData
}

var file_bbq_collector_v1_bbq_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_bbq_collector_v1_bbq_proto_goTypes = []any{
	(*Sensor)(nil),                // 0: bbq.collector.v1.Sensor
	(*SensorReading)(nil),         // 1: bbq.collector.v1.SensorReading
	(*Reading)(nil),               // 2: bbq.collector.v1.Reading
	(*Session)(nil),               // 3: bbq.collector.v1.Session
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_bbq_collector_v1_bbq_proto_depIdxs = []int32{
	0, // 0: bbq.collector.v1.Reading.sensor:type_name -> bbq.collector.v1.Sensor
	1, // 1: bbq.collector.v1.Reading.readings:type_name -> bbq.collector.v1.SensorReading
	4, // 2: bbq.collector.v1.Reading.recorded_at:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_bbq_collector_v1_bbq_proto_init() }
func file_bbq_collector_v1_bbq_proto_init() {
	if File_bbq_collector_v1_bbq_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bbq_collector_v1_bbq_proto_rawDesc), len(file_bbq_collector_v1_bbq_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bbq_collector_v1_bbq_proto_goTypes,
		DependencyIndexes: file_bbq_collector_v1_bbq_proto_depIdxs,
		MessageInfos:      file_bbq_collector_v1_bbq_proto_msgTypes,
	}.Build()
	File_bbq_collector_v1_bbq_proto = out.File
	file_bbq_collector_v1_bbq_proto_goTypes = nil
	file_bbq_collector_v1_bbq_proto_depIdxs = nil
}
