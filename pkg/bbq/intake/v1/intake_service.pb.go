// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: bbq/intake/v1/intake_service.proto

package intakev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reading       []*Reading             `protobuf:"bytes,1,rep,name=reading,proto3" json:"reading,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordRequest) Reset() {
	*x = RecordRequest{}
	mi := &file_bbq_intake_v1_intake_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordRequest) ProtoMessage() {}

func (x *RecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bbq_intake_v1_intake_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordRequest.ProtoReflect.Descriptor instead.
func (*RecordRequest) Descriptor() ([]byte, []int) {
	return file_bbq_intake_v1_intake_service_proto_rawDescGZIP(), []int{0}
}

func (x *RecordRequest) GetReading() []*Reading {
	if x != nil {
		return x.Reading
	}
	return nil
}

type RecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	RecordedAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=recorded_at,json=recordedAt,proto3" json:"recorded_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordResponse) Reset() {
	*x = RecordResponse{}
	mi := &file_bbq_intake_v1_intake_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordResponse) ProtoMessage() {}

func (x *RecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bbq_intake_v1_intake_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordResponse.ProtoReflect.Descriptor instead.
func (*RecordResponse) Descriptor() ([]byte, []int) {
	return file_bbq_intake_v1_intake_service_proto_rawDescGZIP(), []int{1}
}

func (x *RecordResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RecordResponse) GetRecordedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RecordedAt
	}
	return nil
}

type SessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	DeviceName    *string                `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3,oneof" json:"device_name,omitempty"`
	SensorName    *string                `protobuf:"bytes,3,opt,name=sensor_name,json=sensorName,proto3,oneof" json:"sensor_name,omitempty"`
	SubjectId     *string                `protobuf:"bytes,4,opt,name=subject_id,json=subjectId,proto3,oneof" json:"subject_id,omitempty"`
	DesiredState  *string                `protobuf:"bytes,5,opt,name=desired_state,json=desiredState,proto3,oneof" json:"desired_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionRequest) Reset() {
	*x = SessionRequest{}
	mi := &file_bbq_intake_v1_intake_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRequest) ProtoMessage() {}

func (x *SessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bbq_intake_v1_intake_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRequest.ProtoReflect.Descriptor instead.
func (*SessionRequest) Descriptor() ([]byte, []int) {
	return file_bbq_intake_v1_intake_service_proto_rawDescGZIP(), []int{2}
}

func (x *SessionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SessionRequest) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *SessionRequest) GetSensorName() string {
	if x != nil && x.SensorName != nil {
		return *x.SensorName
	}
	return ""
}

func (x *SessionRequest) GetSubjectId() string {
	if x != nil && x.SubjectId != nil {
		return *x.SubjectId
	}
	return ""
}

func (x *SessionRequest) GetDesiredState() string {
	if x != nil && x.DesiredState != nil {
		return *x.DesiredState
	}
	return ""
}

type SessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       *Session               `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionResponse) Reset() {
	*x = SessionResponse{}
	mi := &file_bbq_intake_v1_intake_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionResponse) ProtoMessage() {}

func (x *SessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bbq_intake_v1_intake_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionResponse.ProtoReflect.Descriptor instead.
func (*SessionResponse) Descriptor() ([]byte, []int) {
	return file_bbq_intake_v1_intake_service_proto_rawDescGZIP(), []int{3}
}

func (x *SessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type CreateSensorAlertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SensorAlert   *SensorAlert           `protobuf:"bytes,1,opt,name=sensor_alert,json=sensorAlert,proto3" json:"sensor_alert,omitempty"`
	Rules         []*SensorAlertRule     `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSensorAlertRequest) Reset() {
	*x = CreateSensorAlertRequest{}
	mi := &file_bbq_intake_v1_intake_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSensorAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSensorAlertRequest) ProtoMessage() {}

func (x *CreateSensorAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bbq_intake_v1_intake_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSensorAlertRequest.ProtoReflect.Descriptor instead.
func (*CreateSensorAlertRequest) Descriptor() ([]byte, []int) {
	return file_bbq_intake_v1_intake_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSensorAlertRequest) GetSensorAlert() *SensorAlert {
	if x != nil {
		return x.SensorAlert
	}
	return nil
}

func (x *CreateSensorAlertRequest) GetRules() []*SensorAlertRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type CreateSensorAlertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SensorAlert   *SensorAlert           `protobuf:"bytes,1,opt,name=sensor_alert,json=sensorAlert,proto3" json:"sensor_alert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSensorAlertResponse) Reset() {
	*x = CreateSensorAlertResponse{}
	mi := &file_bbq_intake_v1_intake_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSensorAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSensorAlertResponse) ProtoMessage() {}

func (x *CreateSensorAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bbq_intake_v1_intake_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSensorAlertResponse.ProtoReflect.Descriptor instead.
func (*CreateSensorAlertResponse) Descriptor() ([]byte, []int) {
	return file_bbq_intake_v1_intake_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSensorAlertResponse) GetSensorAlert() *SensorAlert {
	if x != nil {
		return x.SensorAlert
	}
	return nil
}

var File_bbq_intake_v1_intake_service_proto protoreflect.FileDescriptor

const file_bbq_intake_v1_intake_service_proto_rawDesc = "" +
	"\n" +
	"\"bbq/intake/v1/intake_service.proto\x12\rbbq.intake.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17bbq/intake/v1/bbq.proto\"A\n" +
	"\rRecordRequest\x120\n" +
	"\areading\x18\x01 \x03(\v2\x16.bbq.intake.v1.ReadingR\areading\"l\n" +
	"\x0eRecordResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12;\n" +
	"\vrecorded_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"recordedAt\"\x8d\x02\n" +
	"\x0eSessionRequest\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12$\n" +
	"\vdevice_name\x18\x02 \x01(\tH\x00R\n" +
	"deviceName\x88\x01\x01\x12$\n" +
	"\vsensor_name\x18\x03 \x01(\tH\x01R\n" +
	"sensorName\x88\x01\x01\x12\"\n" +
	"\n" +
	"subject_id\x18\x04 \x01(\tH\x02R\tsubjectId\x88\x01\x01\x12(\n" +
	"\rdesired_state\x18\x05 \x01(\tH\x03R\fdesiredState\x88\x01\x01B\x0e\n" +
	"\f_device_nameB\x0e\n" +
	"\f_sensor_nameB\r\n" +
	"\v_subject_idB\x10\n" +
	"\x0e_desired_state\"C\n" +
	"\x0fSessionResponse\x120\n" +
	"\asession\x18\x01 \x01(\v2\x16.bbq.intake.v1.SessionR\asession\"\x8f\x01\n" +
	"\x18CreateSensorAlertRequest\x12=\n" +
	"\fsensor_alert\x18\x01 \x01(\v2\x1a.bbq.intake.v1.SensorAlertR\vsensorAlert\x124\n" +
	"\x05rules\x18\x02 \x03(\v2\x1e.bbq.intake.v1.SensorAlertRuleR\x05rules\"Z\n" +
	"\x19CreateSensorAlertResponse\x12=\n" +
	"\fsensor_alert\x18\x01 \x01(\v2\x1a.bbq.intake.v1.SensorAlertR\vsensorAlert2\xa4\x01\n" +
	"\rIntakeService\x12G\n" +
	"\x06Record\x12\x1c.bbq.intake.v1.RecordRequest\x1a\x1d.bbq.intake.v1.RecordResponse\"\x00\x12J\n" +
	"\aSession\x12\x1d.bbq.intake.v1.SessionRequest\x1a\x1e.bbq.intake.v1.SessionResponse\"\x00B\xb9\x01\n" +
	"\x11com.bbq.intake.v1B\x12IntakeServiceProtoP\x01Z:github.com/ssargent/public-apis/pkg/bbq/intake/v1;intakev1\xa2\x02\x03BIX\xaa\x02\rBbq.Intake.V1\xca\x02\rBbq\\Intake\\V1\xe2\x02\x19Bbq\\Intake\\V1\\GPBMetadata\xea\x02\x0fBbq::Intake::V1b\x06proto3"

var (
	file_bbq_intake_v1_intake_service_proto_rawDescOnce sync.Once
	file_bbq_intake_v1_intake_service_proto_rawDescData []byte
)

func file_bbq_intake_v1_intake_service_proto_rawDescGZIP() []byte {
	file_bbq_intake_v1_intake_service_proto_rawDescOnce.Do(func() {
		file_bbq_intake_v1_intake_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bbq_intake_v1_intake_service_proto_rawDesc), len(file_bbq_intake_v1_intake_service_proto_rawDesc)))
	})
	return file_bbq_intake_v1_intake_service_proto_rawDescData
}

var file_bbq_intake_v1_intake_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_bbq_intake_v1_intake_service_proto_goTypes = []any{
	(*RecordRequest)(nil),             // 0: bbq.intake.v1.RecordRequest
	(*RecordResponse)(nil),            // 1: bbq.intake.v1.RecordResponse
	(*SessionRequest)(nil),            // 2: bbq.intake.v1.SessionRequest
	(*SessionResponse)(nil),           // 3: bbq.intake.v1.SessionResponse
	(*CreateSensorAlertRequest)(nil),  // 4: bbq.intake.v1.CreateSensorAlertRequest
	(*CreateSensorAlertResponse)(nil), // 5: bbq.intake.v1.CreateSensorAlertResponse
	(*Reading)(nil),                   // 6: bbq.intake.v1.Reading
	(*timestamppb.Timestamp)(nil),     // 7: google.protobuf.Timestamp
	(*Session)(nil),                   // 8: bbq.intake.v1.Session
	(*SensorAlert)(nil),               // 9: bbq.intake.v1.SensorAlert
	(*SensorAlertRule)(nil),           // 10: bbq.intake.v1.SensorAlertRule
}
var file_bbq_intake_v1_intake_service_proto_depIdxs = []int32{
	6,  // 0: bbq.intake.v1.RecordRequest.reading:type_name -> bbq.intake.v1.Reading
	7,  // 1: bbq.intake.v1.RecordResponse.recorded_at:type_name -> google.protobuf.Timestamp
	8,  // 2: bbq.intake.v1.SessionResponse.session:type_name -> bbq.intake.v1.Session
	9,  // 3: bbq.intake.v1.CreateSensorAlertRequest.sensor_alert:type_name -> bbq.intake.v1.SensorAlert
	10, // 4: bbq.intake.v1.CreateSensorAlertRequest.rules:type_name -> bbq.intake.v1.SensorAlertRule
	9,  // 5: bbq.intake.v1.CreateSensorAlertResponse.sensor_alert:type_name -> bbq.intake.v1.SensorAlert
	0,  // 6: bbq.intake.v1.IntakeService.Record:input_type -> bbq.intake.v1.RecordRequest
	2,  // 7: bbq.intake.v1.IntakeService.Session:input_type -> bbq.intake.v1.SessionRequest
	1,  // 8: bbq.intake.v1.IntakeService.Record:output_type -> bbq.intake.v1.RecordResponse
	3,  // 9: bbq.intake.v1.IntakeService.Session:output_type -> bbq.intake.v1.SessionResponse
	8,  // [8:10] is the sub-list for method output_type
	6,  // [6:8] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_bbq_intake_v1_intake_service_proto_init() }
func file_bbq_intake_v1_intake_service_proto_init() {
	if File_bbq_intake_v1_intake_service_proto != nil {
		return
	}
	file_bbq_intake_v1_bbq_proto_init()
	file_bbq_intake_v1_intake_service_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bbq_intake_v1_intake_service_proto_rawDesc), len(file_bbq_intake_v1_intake_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bbq_intake_v1_intake_service_proto_goTypes,
		DependencyIndexes: file_bbq_intake_v1_intake_service_proto_depIdxs,
		MessageInfos:      file_bbq_intake_v1_intake_service_proto_msgTypes,
	}.Build()
	File_bbq_intake_v1_intake_service_proto = out.File
	file_bbq_intake_v1_intake_service_proto_goTypes = nil
	file_bbq_intake_v1_intake_service_proto_depIdxs = nil
}
