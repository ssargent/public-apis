// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: recipe/parser/v1/recipe.proto

package parserv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ParsedIngredient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Slug        string  `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Quantity    float64 `protobuf:"fixed64,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Units       string  `protobuf:"bytes,5,opt,name=units,proto3" json:"units,omitempty"`
	Original    string  `protobuf:"bytes,6,opt,name=original,proto3" json:"original,omitempty"`
}

func (x *ParsedIngredient) Reset() {
	*x = ParsedIngredient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_parser_v1_recipe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParsedIngredient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsedIngredient) ProtoMessage() {}

func (x *ParsedIngredient) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_parser_v1_recipe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsedIngredient.ProtoReflect.Descriptor instead.
func (*ParsedIngredient) Descriptor() ([]byte, []int) {
	return file_recipe_parser_v1_recipe_proto_rawDescGZIP(), []int{0}
}

func (x *ParsedIngredient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ParsedIngredient) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *ParsedIngredient) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ParsedIngredient) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ParsedIngredient) GetUnits() string {
	if x != nil {
		return x.Units
	}
	return ""
}

func (x *ParsedIngredient) GetOriginal() string {
	if x != nil {
		return x.Original
	}
	return ""
}

type ParsedInstruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ordinal     uint32 `protobuf:"varint,1,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ParsedInstruction) Reset() {
	*x = ParsedInstruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_parser_v1_recipe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParsedInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsedInstruction) ProtoMessage() {}

func (x *ParsedInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_parser_v1_recipe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsedInstruction.ProtoReflect.Descriptor instead.
func (*ParsedInstruction) Descriptor() ([]byte, []int) {
	return file_recipe_parser_v1_recipe_proto_rawDescGZIP(), []int{1}
}

func (x *ParsedInstruction) GetOrdinal() uint32 {
	if x != nil {
		return x.Ordinal
	}
	return 0
}

func (x *ParsedInstruction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ParsedRecipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Slug         string                 `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Description  string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedDate  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	Ingredients  []*ParsedIngredient    `protobuf:"bytes,5,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Instructions []*ParsedInstruction   `protobuf:"bytes,6,rep,name=instructions,proto3" json:"instructions,omitempty"`
	Categories   []string               `protobuf:"bytes,7,rep,name=categories,proto3" json:"categories,omitempty"`
}

func (x *ParsedRecipe) Reset() {
	*x = ParsedRecipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_parser_v1_recipe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParsedRecipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsedRecipe) ProtoMessage() {}

func (x *ParsedRecipe) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_parser_v1_recipe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsedRecipe.ProtoReflect.Descriptor instead.
func (*ParsedRecipe) Descriptor() ([]byte, []int) {
	return file_recipe_parser_v1_recipe_proto_rawDescGZIP(), []int{2}
}

func (x *ParsedRecipe) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ParsedRecipe) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *ParsedRecipe) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ParsedRecipe) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *ParsedRecipe) GetIngredients() []*ParsedIngredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *ParsedRecipe) GetInstructions() []*ParsedInstruction {
	if x != nil {
		return x.Instructions
	}
	return nil
}

func (x *ParsedRecipe) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

type ParseRecipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipeText string `protobuf:"bytes,1,opt,name=recipe_text,json=recipeText,proto3" json:"recipe_text,omitempty"`
}

func (x *ParseRecipeRequest) Reset() {
	*x = ParseRecipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_parser_v1_recipe_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseRecipeRequest) ProtoMessage() {}

func (x *ParseRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_parser_v1_recipe_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseRecipeRequest.ProtoReflect.Descriptor instead.
func (*ParseRecipeRequest) Descriptor() ([]byte, []int) {
	return file_recipe_parser_v1_recipe_proto_rawDescGZIP(), []int{3}
}

func (x *ParseRecipeRequest) GetRecipeText() string {
	if x != nil {
		return x.RecipeText
	}
	return ""
}

type ParseRecipeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipe *ParsedRecipe `protobuf:"bytes,1,opt,name=recipe,proto3" json:"recipe,omitempty"`
}

func (x *ParseRecipeResponse) Reset() {
	*x = ParseRecipeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_parser_v1_recipe_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseRecipeResponse) ProtoMessage() {}

func (x *ParseRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_parser_v1_recipe_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseRecipeResponse.ProtoReflect.Descriptor instead.
func (*ParseRecipeResponse) Descriptor() ([]byte, []int) {
	return file_recipe_parser_v1_recipe_proto_rawDescGZIP(), []int{4}
}

func (x *ParseRecipeResponse) GetRecipe() *ParsedRecipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

var File_recipe_parser_v1_recipe_proto protoreflect.FileDescriptor

var file_recipe_parser_v1_recipe_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e,
	0x69, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x22,
	0x4f, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xc6, 0x02, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x69, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x47, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x12, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x22, 0x4d, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x64, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x32,
	0x6d, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5c, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12,
	0x24, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xbd,
	0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x73, 0x61, 0x72, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2f, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x52, 0x50, 0x58, 0xaa, 0x02, 0x10, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x10, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x5c, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x5c, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x3a, 0x3a, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recipe_parser_v1_recipe_proto_rawDescOnce sync.Once
	file_recipe_parser_v1_recipe_proto_rawDescData = file_recipe_parser_v1_recipe_proto_rawDesc
)

func file_recipe_parser_v1_recipe_proto_rawDescGZIP() []byte {
	file_recipe_parser_v1_recipe_proto_rawDescOnce.Do(func() {
		file_recipe_parser_v1_recipe_proto_rawDescData = protoimpl.X.CompressGZIP(file_recipe_parser_v1_recipe_proto_rawDescData)
	})
	return file_recipe_parser_v1_recipe_proto_rawDescData
}

var file_recipe_parser_v1_recipe_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_recipe_parser_v1_recipe_proto_goTypes = []interface{}{
	(*ParsedIngredient)(nil),      // 0: recipe.parser.v1.ParsedIngredient
	(*ParsedInstruction)(nil),     // 1: recipe.parser.v1.ParsedInstruction
	(*ParsedRecipe)(nil),          // 2: recipe.parser.v1.ParsedRecipe
	(*ParseRecipeRequest)(nil),    // 3: recipe.parser.v1.ParseRecipeRequest
	(*ParseRecipeResponse)(nil),   // 4: recipe.parser.v1.ParseRecipeResponse
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_recipe_parser_v1_recipe_proto_depIdxs = []int32{
	5, // 0: recipe.parser.v1.ParsedRecipe.created_date:type_name -> google.protobuf.Timestamp
	0, // 1: recipe.parser.v1.ParsedRecipe.ingredients:type_name -> recipe.parser.v1.ParsedIngredient
	1, // 2: recipe.parser.v1.ParsedRecipe.instructions:type_name -> recipe.parser.v1.ParsedInstruction
	2, // 3: recipe.parser.v1.ParseRecipeResponse.recipe:type_name -> recipe.parser.v1.ParsedRecipe
	3, // 4: recipe.parser.v1.ParserService.ParseRecipe:input_type -> recipe.parser.v1.ParseRecipeRequest
	4, // 5: recipe.parser.v1.ParserService.ParseRecipe:output_type -> recipe.parser.v1.ParseRecipeResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_recipe_parser_v1_recipe_proto_init() }
func file_recipe_parser_v1_recipe_proto_init() {
	if File_recipe_parser_v1_recipe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_recipe_parser_v1_recipe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParsedIngredient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipe_parser_v1_recipe_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParsedInstruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipe_parser_v1_recipe_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParsedRecipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipe_parser_v1_recipe_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseRecipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipe_parser_v1_recipe_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseRecipeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recipe_parser_v1_recipe_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recipe_parser_v1_recipe_proto_goTypes,
		DependencyIndexes: file_recipe_parser_v1_recipe_proto_depIdxs,
		MessageInfos:      file_recipe_parser_v1_recipe_proto_msgTypes,
	}.Build()
	File_recipe_parser_v1_recipe_proto = out.File
	file_recipe_parser_v1_recipe_proto_rawDesc = nil
	file_recipe_parser_v1_recipe_proto_goTypes = nil
	file_recipe_parser_v1_recipe_proto_depIdxs = nil
}
