// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: storyteller/config/v1/config_service.proto

package configv1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1 "github.com/ssargent/apis/pkg/storyteller/config/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// ConfigServiceName is the fully-qualified name of the ConfigService service.
	ConfigServiceName = "storyteller.config.v1.ConfigService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// ConfigServiceGetConfigEntriesProcedure is the fully-qualified name of the ConfigService's
	// GetConfigEntries RPC.
	ConfigServiceGetConfigEntriesProcedure = "/storyteller.config.v1.ConfigService/GetConfigEntries"
	// ConfigServiceCreateConfigEntriesProcedure is the fully-qualified name of the ConfigService's
	// CreateConfigEntries RPC.
	ConfigServiceCreateConfigEntriesProcedure = "/storyteller.config.v1.ConfigService/CreateConfigEntries"
	// ConfigServiceUpdateConfigEntriesProcedure is the fully-qualified name of the ConfigService's
	// UpdateConfigEntries RPC.
	ConfigServiceUpdateConfigEntriesProcedure = "/storyteller.config.v1.ConfigService/UpdateConfigEntries"
	// ConfigServiceDeleteConfigEntriesProcedure is the fully-qualified name of the ConfigService's
	// DeleteConfigEntries RPC.
	ConfigServiceDeleteConfigEntriesProcedure = "/storyteller.config.v1.ConfigService/DeleteConfigEntries"
)

// ConfigServiceClient is a client for the storyteller.config.v1.ConfigService service.
type ConfigServiceClient interface {
	GetConfigEntries(context.Context, *connect_go.Request[v1.GetConfigEntriesRequest]) (*connect_go.Response[v1.GetConfigEntriesResponse], error)
	CreateConfigEntries(context.Context, *connect_go.Request[v1.CreateConfigEntriesRequest]) (*connect_go.Response[v1.CreateConfigEntriesResponse], error)
	UpdateConfigEntries(context.Context, *connect_go.Request[v1.UpdateConfigEntriesRequest]) (*connect_go.Response[v1.UpdateConfigEntriesResponse], error)
	DeleteConfigEntries(context.Context, *connect_go.Request[v1.DeleteConfigEntriesRequest]) (*connect_go.Response[v1.DeleteConfigEntriesResponse], error)
}

// NewConfigServiceClient constructs a client for the storyteller.config.v1.ConfigService service.
// By default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped
// responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewConfigServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) ConfigServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &configServiceClient{
		getConfigEntries: connect_go.NewClient[v1.GetConfigEntriesRequest, v1.GetConfigEntriesResponse](
			httpClient,
			baseURL+ConfigServiceGetConfigEntriesProcedure,
			opts...,
		),
		createConfigEntries: connect_go.NewClient[v1.CreateConfigEntriesRequest, v1.CreateConfigEntriesResponse](
			httpClient,
			baseURL+ConfigServiceCreateConfigEntriesProcedure,
			opts...,
		),
		updateConfigEntries: connect_go.NewClient[v1.UpdateConfigEntriesRequest, v1.UpdateConfigEntriesResponse](
			httpClient,
			baseURL+ConfigServiceUpdateConfigEntriesProcedure,
			opts...,
		),
		deleteConfigEntries: connect_go.NewClient[v1.DeleteConfigEntriesRequest, v1.DeleteConfigEntriesResponse](
			httpClient,
			baseURL+ConfigServiceDeleteConfigEntriesProcedure,
			opts...,
		),
	}
}

// configServiceClient implements ConfigServiceClient.
type configServiceClient struct {
	getConfigEntries    *connect_go.Client[v1.GetConfigEntriesRequest, v1.GetConfigEntriesResponse]
	createConfigEntries *connect_go.Client[v1.CreateConfigEntriesRequest, v1.CreateConfigEntriesResponse]
	updateConfigEntries *connect_go.Client[v1.UpdateConfigEntriesRequest, v1.UpdateConfigEntriesResponse]
	deleteConfigEntries *connect_go.Client[v1.DeleteConfigEntriesRequest, v1.DeleteConfigEntriesResponse]
}

// GetConfigEntries calls storyteller.config.v1.ConfigService.GetConfigEntries.
func (c *configServiceClient) GetConfigEntries(ctx context.Context, req *connect_go.Request[v1.GetConfigEntriesRequest]) (*connect_go.Response[v1.GetConfigEntriesResponse], error) {
	return c.getConfigEntries.CallUnary(ctx, req)
}

// CreateConfigEntries calls storyteller.config.v1.ConfigService.CreateConfigEntries.
func (c *configServiceClient) CreateConfigEntries(ctx context.Context, req *connect_go.Request[v1.CreateConfigEntriesRequest]) (*connect_go.Response[v1.CreateConfigEntriesResponse], error) {
	return c.createConfigEntries.CallUnary(ctx, req)
}

// UpdateConfigEntries calls storyteller.config.v1.ConfigService.UpdateConfigEntries.
func (c *configServiceClient) UpdateConfigEntries(ctx context.Context, req *connect_go.Request[v1.UpdateConfigEntriesRequest]) (*connect_go.Response[v1.UpdateConfigEntriesResponse], error) {
	return c.updateConfigEntries.CallUnary(ctx, req)
}

// DeleteConfigEntries calls storyteller.config.v1.ConfigService.DeleteConfigEntries.
func (c *configServiceClient) DeleteConfigEntries(ctx context.Context, req *connect_go.Request[v1.DeleteConfigEntriesRequest]) (*connect_go.Response[v1.DeleteConfigEntriesResponse], error) {
	return c.deleteConfigEntries.CallUnary(ctx, req)
}

// ConfigServiceHandler is an implementation of the storyteller.config.v1.ConfigService service.
type ConfigServiceHandler interface {
	GetConfigEntries(context.Context, *connect_go.Request[v1.GetConfigEntriesRequest]) (*connect_go.Response[v1.GetConfigEntriesResponse], error)
	CreateConfigEntries(context.Context, *connect_go.Request[v1.CreateConfigEntriesRequest]) (*connect_go.Response[v1.CreateConfigEntriesResponse], error)
	UpdateConfigEntries(context.Context, *connect_go.Request[v1.UpdateConfigEntriesRequest]) (*connect_go.Response[v1.UpdateConfigEntriesResponse], error)
	DeleteConfigEntries(context.Context, *connect_go.Request[v1.DeleteConfigEntriesRequest]) (*connect_go.Response[v1.DeleteConfigEntriesResponse], error)
}

// NewConfigServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewConfigServiceHandler(svc ConfigServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	configServiceGetConfigEntriesHandler := connect_go.NewUnaryHandler(
		ConfigServiceGetConfigEntriesProcedure,
		svc.GetConfigEntries,
		opts...,
	)
	configServiceCreateConfigEntriesHandler := connect_go.NewUnaryHandler(
		ConfigServiceCreateConfigEntriesProcedure,
		svc.CreateConfigEntries,
		opts...,
	)
	configServiceUpdateConfigEntriesHandler := connect_go.NewUnaryHandler(
		ConfigServiceUpdateConfigEntriesProcedure,
		svc.UpdateConfigEntries,
		opts...,
	)
	configServiceDeleteConfigEntriesHandler := connect_go.NewUnaryHandler(
		ConfigServiceDeleteConfigEntriesProcedure,
		svc.DeleteConfigEntries,
		opts...,
	)
	return "/storyteller.config.v1.ConfigService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case ConfigServiceGetConfigEntriesProcedure:
			configServiceGetConfigEntriesHandler.ServeHTTP(w, r)
		case ConfigServiceCreateConfigEntriesProcedure:
			configServiceCreateConfigEntriesHandler.ServeHTTP(w, r)
		case ConfigServiceUpdateConfigEntriesProcedure:
			configServiceUpdateConfigEntriesHandler.ServeHTTP(w, r)
		case ConfigServiceDeleteConfigEntriesProcedure:
			configServiceDeleteConfigEntriesHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedConfigServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedConfigServiceHandler struct{}

func (UnimplementedConfigServiceHandler) GetConfigEntries(context.Context, *connect_go.Request[v1.GetConfigEntriesRequest]) (*connect_go.Response[v1.GetConfigEntriesResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("storyteller.config.v1.ConfigService.GetConfigEntries is not implemented"))
}

func (UnimplementedConfigServiceHandler) CreateConfigEntries(context.Context, *connect_go.Request[v1.CreateConfigEntriesRequest]) (*connect_go.Response[v1.CreateConfigEntriesResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("storyteller.config.v1.ConfigService.CreateConfigEntries is not implemented"))
}

func (UnimplementedConfigServiceHandler) UpdateConfigEntries(context.Context, *connect_go.Request[v1.UpdateConfigEntriesRequest]) (*connect_go.Response[v1.UpdateConfigEntriesResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("storyteller.config.v1.ConfigService.UpdateConfigEntries is not implemented"))
}

func (UnimplementedConfigServiceHandler) DeleteConfigEntries(context.Context, *connect_go.Request[v1.DeleteConfigEntriesRequest]) (*connect_go.Response[v1.DeleteConfigEntriesResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("storyteller.config.v1.ConfigService.DeleteConfigEntries is not implemented"))
}
