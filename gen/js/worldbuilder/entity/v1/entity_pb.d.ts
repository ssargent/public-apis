// @generated by protoc-gen-es v2.5.1 with parameter "target=js+dts"
// @generated from file worldbuilder/entity/v1/entity.proto (package worldbuilder.entity.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file worldbuilder/entity/v1/entity.proto.
 */
export declare const file_worldbuilder_entity_v1_entity: GenFile;

/**
 * @generated from message worldbuilder.entity.v1.AttributeDefinition
 */
export declare type AttributeDefinition = Message<"worldbuilder.entity.v1.AttributeDefinition"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string wbatn = 2;
   */
  wbatn: string;

  /**
   * @generated from field: string attribute_name = 3;
   */
  attributeName: string;

  /**
   * @generated from field: string label = 4;
   */
  label: string;

  /**
   * @generated from field: string data_type = 5;
   */
  dataType: string;

  /**
   * @generated from field: int64 created_at = 6;
   */
  createdAt: bigint;

  /**
   * @generated from field: int64 updated_at = 7;
   */
  updatedAt: bigint;
};

/**
 * Describes the message worldbuilder.entity.v1.AttributeDefinition.
 * Use `create(AttributeDefinitionSchema)` to create a new message.
 */
export declare const AttributeDefinitionSchema: GenMessage<AttributeDefinition>;

/**
 * @generated from message worldbuilder.entity.v1.TypeAttribute
 */
export declare type TypeAttribute = Message<"worldbuilder.entity.v1.TypeAttribute"> & {
  /**
   * @generated from field: string wbatn = 1;
   */
  wbatn: string;

  /**
   * @generated from field: string attribute_name = 2;
   */
  attributeName: string;

  /**
   * @generated from field: int32 ordinal = 3;
   */
  ordinal: number;

  /**
   * @generated from field: bool is_required = 4;
   */
  isRequired: boolean;
};

/**
 * Describes the message worldbuilder.entity.v1.TypeAttribute.
 * Use `create(TypeAttributeSchema)` to create a new message.
 */
export declare const TypeAttributeSchema: GenMessage<TypeAttribute>;

/**
 * @generated from message worldbuilder.entity.v1.TypeParent
 */
export declare type TypeParent = Message<"worldbuilder.entity.v1.TypeParent"> & {
  /**
   * @generated from field: string type_id = 1;
   */
  typeId: string;

  /**
   * @generated from field: string wbtn = 2;
   */
  wbtn: string;

  /**
   * @generated from field: string type_name = 3;
   */
  typeName: string;

  /**
   * @generated from field: string type_description = 4;
   */
  typeDescription: string;
};

/**
 * Describes the message worldbuilder.entity.v1.TypeParent.
 * Use `create(TypeParentSchema)` to create a new message.
 */
export declare const TypeParentSchema: GenMessage<TypeParent>;

/**
 * @generated from message worldbuilder.entity.v1.Type
 */
export declare type Type = Message<"worldbuilder.entity.v1.Type"> & {
  /**
   * @generated from field: string type_id = 1;
   */
  typeId: string;

  /**
   * @generated from field: string wbtn = 2;
   */
  wbtn: string;

  /**
   * @generated from field: string type_name = 3;
   */
  typeName: string;

  /**
   * @generated from field: string type_description = 4;
   */
  typeDescription: string;

  /**
   * @generated from field: int64 created_at = 5;
   */
  createdAt: bigint;

  /**
   * @generated from field: int64 updated_at = 6;
   */
  updatedAt: bigint;

  /**
   * @generated from field: worldbuilder.entity.v1.TypeParent parent = 7;
   */
  parent?: TypeParent;

  /**
   * @generated from field: repeated worldbuilder.entity.v1.TypeAttribute attributes = 8;
   */
  attributes: TypeAttribute[];
};

/**
 * Describes the message worldbuilder.entity.v1.Type.
 * Use `create(TypeSchema)` to create a new message.
 */
export declare const TypeSchema: GenMessage<Type>;

/**
 * @generated from message worldbuilder.entity.v1.EntityAttribute
 */
export declare type EntityAttribute = Message<"worldbuilder.entity.v1.EntityAttribute"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: string value = 3;
   */
  value: string;
};

/**
 * Describes the message worldbuilder.entity.v1.EntityAttribute.
 * Use `create(EntityAttributeSchema)` to create a new message.
 */
export declare const EntityAttributeSchema: GenMessage<EntityAttribute>;

/**
 * @generated from message worldbuilder.entity.v1.EntityParent
 */
export declare type EntityParent = Message<"worldbuilder.entity.v1.EntityParent"> & {
  /**
   * @generated from field: string entity_id = 1;
   */
  entityId: string;

  /**
   * @generated from field: string entity_name = 2;
   */
  entityName: string;

  /**
   * @generated from field: string resource_name = 3;
   */
  resourceName: string;

  /**
   * @generated from field: string type_name = 4;
   */
  typeName: string;
};

/**
 * Describes the message worldbuilder.entity.v1.EntityParent.
 * Use `create(EntityParentSchema)` to create a new message.
 */
export declare const EntityParentSchema: GenMessage<EntityParent>;

/**
 * @generated from message worldbuilder.entity.v1.EntityType
 */
export declare type EntityType = Message<"worldbuilder.entity.v1.EntityType"> & {
  /**
   * @generated from field: string type_id = 1;
   */
  typeId: string;

  /**
   * @generated from field: string type_name = 2;
   */
  typeName: string;
};

/**
 * Describes the message worldbuilder.entity.v1.EntityType.
 * Use `create(EntityTypeSchema)` to create a new message.
 */
export declare const EntityTypeSchema: GenMessage<EntityType>;

/**
 * @generated from message worldbuilder.entity.v1.Entity
 */
export declare type Entity = Message<"worldbuilder.entity.v1.Entity"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string resource_name = 2;
   */
  resourceName: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: string created_at = 5;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 6;
   */
  updatedAt: string;

  /**
   * @generated from field: worldbuilder.entity.v1.EntityParent parent = 7;
   */
  parent?: EntityParent;

  /**
   * @generated from field: worldbuilder.entity.v1.EntityType type = 8;
   */
  type?: EntityType;

  /**
   * @generated from field: repeated worldbuilder.entity.v1.EntityAttribute attributes = 9;
   */
  attributes: EntityAttribute[];
};

/**
 * Describes the message worldbuilder.entity.v1.Entity.
 * Use `create(EntitySchema)` to create a new message.
 */
export declare const EntitySchema: GenMessage<Entity>;

/**
 * @generated from message worldbuilder.entity.v1.EntityInput
 */
export declare type EntityInput = Message<"worldbuilder.entity.v1.EntityInput"> & {
  /**
   * @generated from field: string resource_name = 1;
   */
  resourceName: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: string parent_wbrn = 4;
   */
  parentWbrn: string;

  /**
   * @generated from field: string type_name = 5;
   */
  typeName: string;

  /**
   * @generated from field: repeated worldbuilder.entity.v1.EntityAttribute attributes = 6;
   */
  attributes: EntityAttribute[];
};

/**
 * Describes the message worldbuilder.entity.v1.EntityInput.
 * Use `create(EntityInputSchema)` to create a new message.
 */
export declare const EntityInputSchema: GenMessage<EntityInput>;

/**
 * @generated from message worldbuilder.entity.v1.Filter
 */
export declare type Filter = Message<"worldbuilder.entity.v1.Filter"> & {
  /**
   * @generated from field: optional string type_name = 1;
   */
  typeName?: string;

  /**
   * @generated from field: optional string parent_wbrn = 2;
   */
  parentWbrn?: string;
};

/**
 * Describes the message worldbuilder.entity.v1.Filter.
 * Use `create(FilterSchema)` to create a new message.
 */
export declare const FilterSchema: GenMessage<Filter>;

