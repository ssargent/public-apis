// @generated by protoc-gen-es v1.9.0 with parameter "target=js+dts"
// @generated from file worldbuilder/entity/v1/entity.proto (package worldbuilder.entity.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message worldbuilder.entity.v1.AttributeDefinition
 */
export declare class AttributeDefinition extends Message<AttributeDefinition> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string wbatn = 2;
   */
  wbatn: string;

  /**
   * @generated from field: string attribute_name = 3;
   */
  attributeName: string;

  /**
   * @generated from field: string label = 4;
   */
  label: string;

  /**
   * @generated from field: string data_type = 5;
   */
  dataType: string;

  /**
   * @generated from field: int64 created_at = 6;
   */
  createdAt: bigint;

  /**
   * @generated from field: int64 updated_at = 7;
   */
  updatedAt: bigint;

  constructor(data?: PartialMessage<AttributeDefinition>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.AttributeDefinition";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AttributeDefinition;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AttributeDefinition;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AttributeDefinition;

  static equals(a: AttributeDefinition | PlainMessage<AttributeDefinition> | undefined, b: AttributeDefinition | PlainMessage<AttributeDefinition> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.TypeAttribute
 */
export declare class TypeAttribute extends Message<TypeAttribute> {
  /**
   * @generated from field: string wbatn = 1;
   */
  wbatn: string;

  /**
   * @generated from field: string attribute_name = 2;
   */
  attributeName: string;

  /**
   * @generated from field: int32 ordinal = 3;
   */
  ordinal: number;

  /**
   * @generated from field: bool is_required = 4;
   */
  isRequired: boolean;

  constructor(data?: PartialMessage<TypeAttribute>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.TypeAttribute";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TypeAttribute;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TypeAttribute;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TypeAttribute;

  static equals(a: TypeAttribute | PlainMessage<TypeAttribute> | undefined, b: TypeAttribute | PlainMessage<TypeAttribute> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.TypeParent
 */
export declare class TypeParent extends Message<TypeParent> {
  /**
   * @generated from field: string type_id = 1;
   */
  typeId: string;

  /**
   * @generated from field: string wbtn = 2;
   */
  wbtn: string;

  /**
   * @generated from field: string type_name = 3;
   */
  typeName: string;

  /**
   * @generated from field: string type_description = 4;
   */
  typeDescription: string;

  constructor(data?: PartialMessage<TypeParent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.TypeParent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TypeParent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TypeParent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TypeParent;

  static equals(a: TypeParent | PlainMessage<TypeParent> | undefined, b: TypeParent | PlainMessage<TypeParent> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.Type
 */
export declare class Type extends Message<Type> {
  /**
   * @generated from field: string type_id = 1;
   */
  typeId: string;

  /**
   * @generated from field: string wbtn = 2;
   */
  wbtn: string;

  /**
   * @generated from field: string type_name = 3;
   */
  typeName: string;

  /**
   * @generated from field: string type_description = 4;
   */
  typeDescription: string;

  /**
   * @generated from field: int64 created_at = 5;
   */
  createdAt: bigint;

  /**
   * @generated from field: int64 updated_at = 6;
   */
  updatedAt: bigint;

  /**
   * @generated from field: worldbuilder.entity.v1.TypeParent parent = 7;
   */
  parent?: TypeParent;

  /**
   * @generated from field: repeated worldbuilder.entity.v1.TypeAttribute attributes = 8;
   */
  attributes: TypeAttribute[];

  constructor(data?: PartialMessage<Type>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.Type";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Type;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Type;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Type;

  static equals(a: Type | PlainMessage<Type> | undefined, b: Type | PlainMessage<Type> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.EntityAttribute
 */
export declare class EntityAttribute extends Message<EntityAttribute> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: string value = 3;
   */
  value: string;

  constructor(data?: PartialMessage<EntityAttribute>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.EntityAttribute";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntityAttribute;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntityAttribute;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntityAttribute;

  static equals(a: EntityAttribute | PlainMessage<EntityAttribute> | undefined, b: EntityAttribute | PlainMessage<EntityAttribute> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.EntityParent
 */
export declare class EntityParent extends Message<EntityParent> {
  /**
   * @generated from field: string entity_id = 1;
   */
  entityId: string;

  /**
   * @generated from field: string entity_name = 2;
   */
  entityName: string;

  /**
   * @generated from field: string resource_name = 3;
   */
  resourceName: string;

  /**
   * @generated from field: string type_name = 4;
   */
  typeName: string;

  constructor(data?: PartialMessage<EntityParent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.EntityParent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntityParent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntityParent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntityParent;

  static equals(a: EntityParent | PlainMessage<EntityParent> | undefined, b: EntityParent | PlainMessage<EntityParent> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.EntityType
 */
export declare class EntityType extends Message<EntityType> {
  /**
   * @generated from field: string type_id = 1;
   */
  typeId: string;

  /**
   * @generated from field: string type_name = 2;
   */
  typeName: string;

  constructor(data?: PartialMessage<EntityType>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.EntityType";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntityType;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntityType;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntityType;

  static equals(a: EntityType | PlainMessage<EntityType> | undefined, b: EntityType | PlainMessage<EntityType> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.Entity
 */
export declare class Entity extends Message<Entity> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string resource_name = 2;
   */
  resourceName: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: string created_at = 5;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 6;
   */
  updatedAt: string;

  /**
   * @generated from field: worldbuilder.entity.v1.EntityParent parent = 7;
   */
  parent?: EntityParent;

  /**
   * @generated from field: worldbuilder.entity.v1.EntityType type = 8;
   */
  type?: EntityType;

  /**
   * @generated from field: repeated worldbuilder.entity.v1.EntityAttribute attributes = 9;
   */
  attributes: EntityAttribute[];

  constructor(data?: PartialMessage<Entity>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.Entity";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Entity;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Entity;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Entity;

  static equals(a: Entity | PlainMessage<Entity> | undefined, b: Entity | PlainMessage<Entity> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.EntityInput
 */
export declare class EntityInput extends Message<EntityInput> {
  /**
   * @generated from field: string resource_name = 1;
   */
  resourceName: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: string parent_wbrn = 4;
   */
  parentWbrn: string;

  /**
   * @generated from field: string type_name = 5;
   */
  typeName: string;

  /**
   * @generated from field: repeated worldbuilder.entity.v1.EntityAttribute attributes = 6;
   */
  attributes: EntityAttribute[];

  constructor(data?: PartialMessage<EntityInput>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.EntityInput";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntityInput;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntityInput;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntityInput;

  static equals(a: EntityInput | PlainMessage<EntityInput> | undefined, b: EntityInput | PlainMessage<EntityInput> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.Filter
 */
export declare class Filter extends Message<Filter> {
  /**
   * @generated from field: optional string type_name = 1;
   */
  typeName?: string;

  /**
   * @generated from field: optional string parent_wbrn = 2;
   */
  parentWbrn?: string;

  constructor(data?: PartialMessage<Filter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.Filter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Filter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Filter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Filter;

  static equals(a: Filter | PlainMessage<Filter> | undefined, b: Filter | PlainMessage<Filter> | undefined): boolean;
}

