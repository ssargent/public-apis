// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=js+dts"
// @generated from file worldbuilder/entity/v1/entity_service.proto (package worldbuilder.entity.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateEntityRequest, CreateEntityResponse, CreateTypeRequest, CreateTypeResponse, GetEntitiesRequest, GetEntitiesResponse, GetEntityRequest, GetEntityResponse } from "./entity_service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service worldbuilder.entity.v1.EntityService
 */
export declare const EntityService: {
  readonly typeName: "worldbuilder.entity.v1.EntityService",
  readonly methods: {
    /**
     * @generated from rpc worldbuilder.entity.v1.EntityService.GetEntity
     */
    readonly getEntity: {
      readonly name: "GetEntity",
      readonly I: typeof GetEntityRequest,
      readonly O: typeof GetEntityResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc worldbuilder.entity.v1.EntityService.GetEntities
     */
    readonly getEntities: {
      readonly name: "GetEntities",
      readonly I: typeof GetEntitiesRequest,
      readonly O: typeof GetEntitiesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc worldbuilder.entity.v1.EntityService.CreateType
     */
    readonly createType: {
      readonly name: "CreateType",
      readonly I: typeof CreateTypeRequest,
      readonly O: typeof CreateTypeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc worldbuilder.entity.v1.EntityService.CreateEntity
     */
    readonly createEntity: {
      readonly name: "CreateEntity",
      readonly I: typeof CreateEntityRequest,
      readonly O: typeof CreateEntityResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

