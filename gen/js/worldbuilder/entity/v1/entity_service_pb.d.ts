// @generated by protoc-gen-es v1.9.0 with parameter "target=js+dts"
// @generated from file worldbuilder/entity/v1/entity_service.proto (package worldbuilder.entity.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Entity, EntityInput, Filter, Type } from "./entity_pb.js";

/**
 * @generated from message worldbuilder.entity.v1.GetEntityRequest
 */
export declare class GetEntityRequest extends Message<GetEntityRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<GetEntityRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.GetEntityRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEntityRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEntityRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEntityRequest;

  static equals(a: GetEntityRequest | PlainMessage<GetEntityRequest> | undefined, b: GetEntityRequest | PlainMessage<GetEntityRequest> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.GetEntityResponse
 */
export declare class GetEntityResponse extends Message<GetEntityResponse> {
  /**
   * @generated from field: worldbuilder.entity.v1.Entity entity = 1;
   */
  entity?: Entity;

  constructor(data?: PartialMessage<GetEntityResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.GetEntityResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEntityResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEntityResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEntityResponse;

  static equals(a: GetEntityResponse | PlainMessage<GetEntityResponse> | undefined, b: GetEntityResponse | PlainMessage<GetEntityResponse> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.GetEntitiesRequest
 */
export declare class GetEntitiesRequest extends Message<GetEntitiesRequest> {
  /**
   * @generated from field: worldbuilder.entity.v1.Filter criteria = 1;
   */
  criteria?: Filter;

  constructor(data?: PartialMessage<GetEntitiesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.GetEntitiesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEntitiesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEntitiesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEntitiesRequest;

  static equals(a: GetEntitiesRequest | PlainMessage<GetEntitiesRequest> | undefined, b: GetEntitiesRequest | PlainMessage<GetEntitiesRequest> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.GetEntitiesResponse
 */
export declare class GetEntitiesResponse extends Message<GetEntitiesResponse> {
  /**
   * @generated from field: worldbuilder.entity.v1.Filter criteria = 1;
   */
  criteria?: Filter;

  /**
   * @generated from field: repeated worldbuilder.entity.v1.Entity entities = 2;
   */
  entities: Entity[];

  constructor(data?: PartialMessage<GetEntitiesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.GetEntitiesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEntitiesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEntitiesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEntitiesResponse;

  static equals(a: GetEntitiesResponse | PlainMessage<GetEntitiesResponse> | undefined, b: GetEntitiesResponse | PlainMessage<GetEntitiesResponse> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.CreateTypeRequest
 */
export declare class CreateTypeRequest extends Message<CreateTypeRequest> {
  /**
   * @generated from field: worldbuilder.entity.v1.Type type = 1;
   */
  type?: Type;

  constructor(data?: PartialMessage<CreateTypeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.CreateTypeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateTypeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateTypeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateTypeRequest;

  static equals(a: CreateTypeRequest | PlainMessage<CreateTypeRequest> | undefined, b: CreateTypeRequest | PlainMessage<CreateTypeRequest> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.CreateTypeResponse
 */
export declare class CreateTypeResponse extends Message<CreateTypeResponse> {
  /**
   * @generated from field: worldbuilder.entity.v1.Type type = 1;
   */
  type?: Type;

  constructor(data?: PartialMessage<CreateTypeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.CreateTypeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateTypeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateTypeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateTypeResponse;

  static equals(a: CreateTypeResponse | PlainMessage<CreateTypeResponse> | undefined, b: CreateTypeResponse | PlainMessage<CreateTypeResponse> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.CreateEntityRequest
 */
export declare class CreateEntityRequest extends Message<CreateEntityRequest> {
  /**
   * @generated from field: worldbuilder.entity.v1.EntityInput entity = 1;
   */
  entity?: EntityInput;

  constructor(data?: PartialMessage<CreateEntityRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.CreateEntityRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateEntityRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateEntityRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateEntityRequest;

  static equals(a: CreateEntityRequest | PlainMessage<CreateEntityRequest> | undefined, b: CreateEntityRequest | PlainMessage<CreateEntityRequest> | undefined): boolean;
}

/**
 * @generated from message worldbuilder.entity.v1.CreateEntityResponse
 */
export declare class CreateEntityResponse extends Message<CreateEntityResponse> {
  /**
   * @generated from field: worldbuilder.entity.v1.Entity entity = 1;
   */
  entity?: Entity;

  constructor(data?: PartialMessage<CreateEntityResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "worldbuilder.entity.v1.CreateEntityResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateEntityResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateEntityResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateEntityResponse;

  static equals(a: CreateEntityResponse | PlainMessage<CreateEntityResponse> | undefined, b: CreateEntityResponse | PlainMessage<CreateEntityResponse> | undefined): boolean;
}

