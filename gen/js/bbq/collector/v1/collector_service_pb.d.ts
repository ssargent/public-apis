// @generated by protoc-gen-es v2.5.1 with parameter "target=js+dts"
// @generated from file bbq/collector/v1/collector_service.proto (package bbq.collector.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Reading, Session } from "./bbq_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file bbq/collector/v1/collector_service.proto.
 */
export declare const file_bbq_collector_v1_collector_service: GenFile;

/**
 * @generated from message bbq.collector.v1.RecordRequest
 */
export declare type RecordRequest = Message<"bbq.collector.v1.RecordRequest"> & {
  /**
   * @generated from field: bbq.collector.v1.Reading reading = 1;
   */
  reading?: Reading;
};

/**
 * Describes the message bbq.collector.v1.RecordRequest.
 * Use `create(RecordRequestSchema)` to create a new message.
 */
export declare const RecordRequestSchema: GenMessage<RecordRequest>;

/**
 * @generated from message bbq.collector.v1.RecordResponse
 */
export declare type RecordResponse = Message<"bbq.collector.v1.RecordResponse"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: google.protobuf.Timestamp recorded_at = 2;
   */
  recordedAt?: Timestamp;
};

/**
 * Describes the message bbq.collector.v1.RecordResponse.
 * Use `create(RecordResponseSchema)` to create a new message.
 */
export declare const RecordResponseSchema: GenMessage<RecordResponse>;

/**
 * @generated from message bbq.collector.v1.SessionRequest
 */
export declare type SessionRequest = Message<"bbq.collector.v1.SessionRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message bbq.collector.v1.SessionRequest.
 * Use `create(SessionRequestSchema)` to create a new message.
 */
export declare const SessionRequestSchema: GenMessage<SessionRequest>;

/**
 * @generated from message bbq.collector.v1.SessionResponse
 */
export declare type SessionResponse = Message<"bbq.collector.v1.SessionResponse"> & {
  /**
   * @generated from field: bbq.collector.v1.Session session = 1;
   */
  session?: Session;
};

/**
 * Describes the message bbq.collector.v1.SessionResponse.
 * Use `create(SessionResponseSchema)` to create a new message.
 */
export declare const SessionResponseSchema: GenMessage<SessionResponse>;

/**
 * @generated from service bbq.collector.v1.CollectorService
 */
export declare const CollectorService: GenService<{
  /**
   * @generated from rpc bbq.collector.v1.CollectorService.Record
   */
  record: {
    methodKind: "unary";
    input: typeof RecordRequestSchema;
    output: typeof RecordResponseSchema;
  },
  /**
   * @generated from rpc bbq.collector.v1.CollectorService.Session
   */
  session: {
    methodKind: "unary";
    input: typeof SessionRequestSchema;
    output: typeof SessionResponseSchema;
  },
}>;

