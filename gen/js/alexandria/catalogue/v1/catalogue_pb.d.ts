// @generated by protoc-gen-es v1.9.0 with parameter "target=js+dts"
// @generated from file alexandria/catalogue/v1/catalogue.proto (package alexandria.catalogue.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message alexandria.catalogue.v1.Author
 */
export declare class Author extends Message<Author> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: int64 created = 3;
   */
  created: bigint;

  /**
   * @generated from field: string created_by = 4;
   */
  createdBy: string;

  /**
   * @generated from field: int64 updated = 5;
   */
  updated: bigint;

  /**
   * @generated from field: string modified_by = 6;
   */
  modifiedBy: string;

  constructor(data?: PartialMessage<Author>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "alexandria.catalogue.v1.Author";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Author;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Author;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Author;

  static equals(a: Author | PlainMessage<Author> | undefined, b: Author | PlainMessage<Author> | undefined): boolean;
}

/**
 * @generated from message alexandria.catalogue.v1.ItemInput
 */
export declare class ItemInput extends Message<ItemInput> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * @generated from field: repeated string categories = 4;
   */
  categories: string[];

  /**
   * @generated from field: repeated string tags = 5;
   */
  tags: string[];

  /**
   * @generated from field: repeated alexandria.catalogue.v1.Author authors = 6;
   */
  authors: Author[];

  constructor(data?: PartialMessage<ItemInput>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "alexandria.catalogue.v1.ItemInput";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ItemInput;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ItemInput;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ItemInput;

  static equals(a: ItemInput | PlainMessage<ItemInput> | undefined, b: ItemInput | PlainMessage<ItemInput> | undefined): boolean;
}

/**
 * @generated from message alexandria.catalogue.v1.Item
 */
export declare class Item extends Message<Item> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: string type = 4;
   */
  type: string;

  /**
   * @generated from field: repeated string categories = 5;
   */
  categories: string[];

  /**
   * @generated from field: repeated string tags = 6;
   */
  tags: string[];

  /**
   * @generated from field: repeated alexandria.catalogue.v1.Author authors = 7;
   */
  authors: Author[];

  /**
   * @generated from field: int64 created = 8;
   */
  created: bigint;

  /**
   * @generated from field: string created_by = 9;
   */
  createdBy: string;

  /**
   * @generated from field: int64 updated = 10;
   */
  updated: bigint;

  /**
   * @generated from field: string modified_by = 11;
   */
  modifiedBy: string;

  /**
   * @generated from field: alexandria.catalogue.v1.ShelfReference shelf = 12;
   */
  shelf?: ShelfReference;

  constructor(data?: PartialMessage<Item>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "alexandria.catalogue.v1.Item";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Item;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Item;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Item;

  static equals(a: Item | PlainMessage<Item> | undefined, b: Item | PlainMessage<Item> | undefined): boolean;
}

/**
 * @generated from message alexandria.catalogue.v1.ItemReference
 */
export declare class ItemReference extends Message<ItemReference> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<ItemReference>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "alexandria.catalogue.v1.ItemReference";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ItemReference;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ItemReference;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ItemReference;

  static equals(a: ItemReference | PlainMessage<ItemReference> | undefined, b: ItemReference | PlainMessage<ItemReference> | undefined): boolean;
}

/**
 * @generated from message alexandria.catalogue.v1.ShelfInput
 */
export declare class ShelfInput extends Message<ShelfInput> {
  /**
   * @generated from field: string location = 1;
   */
  location: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  constructor(data?: PartialMessage<ShelfInput>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "alexandria.catalogue.v1.ShelfInput";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShelfInput;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShelfInput;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShelfInput;

  static equals(a: ShelfInput | PlainMessage<ShelfInput> | undefined, b: ShelfInput | PlainMessage<ShelfInput> | undefined): boolean;
}

/**
 * @generated from message alexandria.catalogue.v1.Shelf
 */
export declare class Shelf extends Message<Shelf> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string location = 2;
   */
  location: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: int64 created = 4;
   */
  created: bigint;

  /**
   * @generated from field: string created_by = 5;
   */
  createdBy: string;

  /**
   * @generated from field: int64 updated = 6;
   */
  updated: bigint;

  /**
   * @generated from field: string modified_by = 7;
   */
  modifiedBy: string;

  /**
   * @generated from field: alexandria.catalogue.v1.RoomReference room = 8;
   */
  room?: RoomReference;

  constructor(data?: PartialMessage<Shelf>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "alexandria.catalogue.v1.Shelf";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shelf;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shelf;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shelf;

  static equals(a: Shelf | PlainMessage<Shelf> | undefined, b: Shelf | PlainMessage<Shelf> | undefined): boolean;
}

/**
 * @generated from message alexandria.catalogue.v1.ShelfReference
 */
export declare class ShelfReference extends Message<ShelfReference> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string location = 2;
   */
  location: string;

  constructor(data?: PartialMessage<ShelfReference>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "alexandria.catalogue.v1.ShelfReference";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShelfReference;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShelfReference;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShelfReference;

  static equals(a: ShelfReference | PlainMessage<ShelfReference> | undefined, b: ShelfReference | PlainMessage<ShelfReference> | undefined): boolean;
}

/**
 * @generated from message alexandria.catalogue.v1.RoomInput
 */
export declare class RoomInput extends Message<RoomInput> {
  /**
   * @generated from field: string location = 1;
   */
  location: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: repeated alexandria.catalogue.v1.ShelfInput shelves = 3;
   */
  shelves: ShelfInput[];

  constructor(data?: PartialMessage<RoomInput>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "alexandria.catalogue.v1.RoomInput";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoomInput;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoomInput;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoomInput;

  static equals(a: RoomInput | PlainMessage<RoomInput> | undefined, b: RoomInput | PlainMessage<RoomInput> | undefined): boolean;
}

/**
 * @generated from message alexandria.catalogue.v1.Room
 */
export declare class Room extends Message<Room> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string location = 2;
   */
  location: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: repeated alexandria.catalogue.v1.Shelf shelves = 4;
   */
  shelves: Shelf[];

  /**
   * @generated from field: int64 created = 5;
   */
  created: bigint;

  /**
   * @generated from field: string created_by = 6;
   */
  createdBy: string;

  /**
   * @generated from field: int64 updated = 7;
   */
  updated: bigint;

  /**
   * @generated from field: string modified_by = 8;
   */
  modifiedBy: string;

  constructor(data?: PartialMessage<Room>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "alexandria.catalogue.v1.Room";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Room;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Room;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Room;

  static equals(a: Room | PlainMessage<Room> | undefined, b: Room | PlainMessage<Room> | undefined): boolean;
}

/**
 * @generated from message alexandria.catalogue.v1.RoomReference
 */
export declare class RoomReference extends Message<RoomReference> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string location = 2;
   */
  location: string;

  constructor(data?: PartialMessage<RoomReference>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "alexandria.catalogue.v1.RoomReference";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoomReference;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoomReference;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoomReference;

  static equals(a: RoomReference | PlainMessage<RoomReference> | undefined, b: RoomReference | PlainMessage<RoomReference> | undefined): boolean;
}

