// @generated by protoc-gen-es v1.9.0 with parameter "target=js+dts"
// @generated from file recipe/parser/v1/recipe.proto (package recipe.parser.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message recipe.parser.v1.ParsedIngredient
 */
export declare class ParsedIngredient extends Message<ParsedIngredient> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string slug = 2;
   */
  slug: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: double quantity = 4;
   */
  quantity: number;

  /**
   * @generated from field: string units = 5;
   */
  units: string;

  /**
   * @generated from field: string original = 6;
   */
  original: string;

  constructor(data?: PartialMessage<ParsedIngredient>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "recipe.parser.v1.ParsedIngredient";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParsedIngredient;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParsedIngredient;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParsedIngredient;

  static equals(a: ParsedIngredient | PlainMessage<ParsedIngredient> | undefined, b: ParsedIngredient | PlainMessage<ParsedIngredient> | undefined): boolean;
}

/**
 * @generated from message recipe.parser.v1.ParsedInstruction
 */
export declare class ParsedInstruction extends Message<ParsedInstruction> {
  /**
   * @generated from field: uint32 ordinal = 1;
   */
  ordinal: number;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  constructor(data?: PartialMessage<ParsedInstruction>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "recipe.parser.v1.ParsedInstruction";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParsedInstruction;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParsedInstruction;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParsedInstruction;

  static equals(a: ParsedInstruction | PlainMessage<ParsedInstruction> | undefined, b: ParsedInstruction | PlainMessage<ParsedInstruction> | undefined): boolean;
}

/**
 * @generated from message recipe.parser.v1.ParsedRecipe
 */
export declare class ParsedRecipe extends Message<ParsedRecipe> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string slug = 2;
   */
  slug: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_date = 4;
   */
  createdDate?: Timestamp;

  /**
   * @generated from field: repeated recipe.parser.v1.ParsedIngredient ingredients = 5;
   */
  ingredients: ParsedIngredient[];

  /**
   * @generated from field: repeated recipe.parser.v1.ParsedInstruction instructions = 6;
   */
  instructions: ParsedInstruction[];

  /**
   * @generated from field: repeated string categories = 7;
   */
  categories: string[];

  constructor(data?: PartialMessage<ParsedRecipe>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "recipe.parser.v1.ParsedRecipe";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParsedRecipe;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParsedRecipe;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParsedRecipe;

  static equals(a: ParsedRecipe | PlainMessage<ParsedRecipe> | undefined, b: ParsedRecipe | PlainMessage<ParsedRecipe> | undefined): boolean;
}

/**
 * @generated from message recipe.parser.v1.ParseRecipeRequest
 */
export declare class ParseRecipeRequest extends Message<ParseRecipeRequest> {
  /**
   * @generated from field: string recipe_text = 1;
   */
  recipeText: string;

  constructor(data?: PartialMessage<ParseRecipeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "recipe.parser.v1.ParseRecipeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParseRecipeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParseRecipeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParseRecipeRequest;

  static equals(a: ParseRecipeRequest | PlainMessage<ParseRecipeRequest> | undefined, b: ParseRecipeRequest | PlainMessage<ParseRecipeRequest> | undefined): boolean;
}

/**
 * @generated from message recipe.parser.v1.ParseRecipeResponse
 */
export declare class ParseRecipeResponse extends Message<ParseRecipeResponse> {
  /**
   * @generated from field: recipe.parser.v1.ParsedRecipe recipe = 1;
   */
  recipe?: ParsedRecipe;

  constructor(data?: PartialMessage<ParseRecipeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "recipe.parser.v1.ParseRecipeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParseRecipeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParseRecipeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParseRecipeResponse;

  static equals(a: ParseRecipeResponse | PlainMessage<ParseRecipeResponse> | undefined, b: ParseRecipeResponse | PlainMessage<ParseRecipeResponse> | undefined): boolean;
}

