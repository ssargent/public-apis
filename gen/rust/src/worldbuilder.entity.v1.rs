// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AttributeDefinition {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub wbatn: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub attribute_name: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub label: ::prost::alloc::string::String,
    #[prost(string, tag="5")]
    pub data_type: ::prost::alloc::string::String,
    #[prost(int64, tag="6")]
    pub created_at: i64,
    #[prost(int64, tag="7")]
    pub updated_at: i64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TypeAttribute {
    #[prost(string, tag="1")]
    pub wbatn: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub attribute_name: ::prost::alloc::string::String,
    #[prost(int32, tag="3")]
    pub ordinal: i32,
    #[prost(bool, tag="4")]
    pub is_required: bool,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TypeParent {
    #[prost(string, tag="1")]
    pub type_id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub wbtn: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub type_name: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub type_description: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Type {
    #[prost(string, tag="1")]
    pub type_id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub wbtn: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub type_name: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub type_description: ::prost::alloc::string::String,
    #[prost(int64, tag="5")]
    pub created_at: i64,
    #[prost(int64, tag="6")]
    pub updated_at: i64,
    #[prost(message, optional, tag="7")]
    pub parent: ::core::option::Option<TypeParent>,
    #[prost(message, repeated, tag="8")]
    pub attributes: ::prost::alloc::vec::Vec<TypeAttribute>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EntityAttribute {
    #[prost(string, tag="1")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub value: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EntityParent {
    #[prost(string, tag="1")]
    pub entity_id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub entity_name: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub resource_name: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub type_name: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EntityType {
    #[prost(string, tag="1")]
    pub type_id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub type_name: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Entity {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub resource_name: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub description: ::prost::alloc::string::String,
    #[prost(string, tag="5")]
    pub created_at: ::prost::alloc::string::String,
    #[prost(string, tag="6")]
    pub updated_at: ::prost::alloc::string::String,
    #[prost(message, optional, tag="7")]
    pub parent: ::core::option::Option<EntityParent>,
    #[prost(message, optional, tag="8")]
    pub r#type: ::core::option::Option<EntityType>,
    #[prost(message, repeated, tag="9")]
    pub attributes: ::prost::alloc::vec::Vec<EntityAttribute>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EntityInput {
    #[prost(string, tag="1")]
    pub resource_name: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub description: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub parent_wbrn: ::prost::alloc::string::String,
    #[prost(string, tag="5")]
    pub type_name: ::prost::alloc::string::String,
    #[prost(message, repeated, tag="6")]
    pub attributes: ::prost::alloc::vec::Vec<EntityAttribute>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Filter {
    #[prost(string, optional, tag="1")]
    pub type_name: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag="2")]
    pub parent_wbrn: ::core::option::Option<::prost::alloc::string::String>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetEntityRequest {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetEntityResponse {
    #[prost(message, optional, tag="1")]
    pub entity: ::core::option::Option<Entity>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetEntitiesRequest {
    #[prost(message, optional, tag="1")]
    pub criteria: ::core::option::Option<Filter>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetEntitiesResponse {
    #[prost(message, optional, tag="1")]
    pub criteria: ::core::option::Option<Filter>,
    #[prost(message, repeated, tag="2")]
    pub entities: ::prost::alloc::vec::Vec<Entity>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateTypeRequest {
    #[prost(message, optional, tag="1")]
    pub r#type: ::core::option::Option<Type>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateTypeResponse {
    #[prost(message, optional, tag="1")]
    pub r#type: ::core::option::Option<Type>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateEntityRequest {
    #[prost(message, optional, tag="1")]
    pub entity: ::core::option::Option<EntityInput>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateEntityResponse {
    #[prost(message, optional, tag="1")]
    pub entity: ::core::option::Option<Entity>,
}
include!("worldbuilder.entity.v1.tonic.rs");
// @@protoc_insertion_point(module)